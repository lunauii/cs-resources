[[{"l":"BCITCS Resources","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","A site of topics covered in CST written by CST students, for CST students."]}],[{"l":"Contributing","p":["This page is a stub. Feel free to help contribute by creating a pull request!","Reason: currently missing Editing Guidelines section Latest Update: 09 January 2025"]},{"l":"Basics"},{"l":"Pre-requisites","p":["Ensure that before contributing, you have basic knowledge of the git CLI tool as well as are semi-familiar GitHub.","An IDE or text editor is not needed due to the wiki being editable in the development build, but can be used if you want a wide overview of the code or just prefer coding in one in general.","Visual Studio Code ( https://code.visualstudio.com/)","Brackets ( https://brackets.io/)","JetBrains WebStorm ( https://www.jetbrains.com/webstorm/)","You must also have the retypeapp package installed. Instructions are provided on Retype's Quick Start guide.","You can contribute to the source code without retypeapp. However, you will not be able to see a live preview of your code on a page."]},{"l":"Forking","p":["To begin helping out, you must first fork lunaui/bcit-resources on GitHub and create a remote instance of it on your machine. Leave the repository name the same as-is, unless you want to fork it for other purposes.","To fork this project, go to the repository on GitHub and press the button near the top-right of the page.","Navigate to that repository and take note of the URL, you will need it for the next section."]},{"l":"Cloning","p":["Clone the repository into a location of your choosing and then change directories to it. For demonstration purposes, I am going to be cloning the bcit-resources folder into the user's Documents folder.","Replace lunaui with your Github username, and usr with your machine's user's name."]},{"l":"Testing and Editing","p":["To see a live preview of the page while the code is being edited, run the following command while still in the git directory:","A localhost server of the development build will be opened, allowing you to see changes in real time.","While serving the page this way, you can either directly edit the files with the button on the top right of any given article while in the development build, or you can edit the files with an IDE or text editor.","Both solutions are, at baseline, functionally identical."]},{"l":"Pull Requests","p":["In order to save the changes to this website and not just the copy you have on your machine, you will have to create and send a pull request.","To do this, first ensure all your changes have been pushed already.","It is recommended to commit your changes frequently and often before pushing instead of dumping your push into one massive commit.","Go to your repository on github. You should see a button above the file list called .","Create a pull request with a meaningful title and description describing what you have changed with your commits. After that, create the pull request with the corresponding button.","If your changes get approved (it probably will), you will see your changes on the website take effect!","If you are a regular contributor or have made guides in the past for CST, ask me on Discord ( lunaui) for Collaborator access to the repository so that you can bypass me needing to approve your pull requests or even approve other's pull requests yourself!"]},{"l":"Editing guidelines","p":["TODO: cover discrepancies between BBY and DTC"]}],[{"l":"Crescent Difficulty Index","p":["The information on this page is largely based on opinion. It may not fully reflect each individual's opinions and is just a genearlization.","The Crescent Difficulty Index(CDI) is an informal unit of measuring a course's difficulty based on 3 factors."]},{"l":"Factors"},{"i":"load-55","l":"Load (55%)","p":["This factor is influenced by how often and clustered coursework such as quizzes, labs, assignments, and projects are as well as how long it averagely takes to complete them. It also takes into account how much of the textbook you need to study in order outside of lectures in order to succeed in quizzes and tests. For group projects, it is also determined by how often each group member needs to spend on it per week. It is the highest weighted factor of the three."]},{"i":"complexity-30","l":"Complexity (30%)","p":["This factor is influenced by how difficult the material in a course is relative to a student without prior experience in the field, as well as how difficult the topic is in general."]},{"i":"strain-15","l":"Strain (15%)","p":["This factor is mostly based on the public opinion of the instructor, the quality of the lectures/labs relative to how much you need to study it outside of them, and the clarity of instructions as a whole. The length of a lecture also affects Strain for lectures that go over 1h50m. This factor has the least weight due to its high variability."]},{"l":"Grades","p":["After considering all these factors, grades are then given based on how much the factors are present."]},{"i":"crescent-moon","l":":crescent_moon:","p":["CDI","Least Concern. Courses in this CDI category are usually pass or fail courses, or courses that are incredibly easy."]},{"i":"crescent-moon-crescent-moon","l":":crescent_moon::crescent_moon:","p":["CDI","Safe Courses in this CDI category are usually relatively easy classes and/or have amazing professors."]},{"i":"crescent-moon-crescent-moon-crescent-moon","l":":crescent_moon::crescent_moon::crescent_moon:","p":["CDI","Normal Courses in this CDI category are of average difficulty, having moderate workload and study requirements."]},{"i":"crescent-moon-crescent-moon-crescent-moon-crescent-moon","l":":crescent_moon::crescent_moon::crescent_moon::crescent_moon:","p":["CDI","Tough Courses in this CDI category have higher than average difficulty, either having more complex topics or heavier workload than the previous ones."]},{"i":"crescent-moon-crescent-moon-crescent-moon-crescent-moon-crescent-moon","l":":crescent_moon::crescent_moon::crescent_moon::crescent_moon::crescent_moon:","p":["CDI","High Priority Courses in this CDI category are infamously hard classes relative to the term, being deeply complex in nature, requiring large amounts of time dedicated to it, or both. A rough professor usually doesn't propel a course into this category, but it can be a pivoting factor."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Business Analysis and System Design","p":["This guide is deprecated and has been succeeded by the COMP 1712 Bible.","Links: Old Testament| New Testament"]}],[{"l":"Term 2"},{"l":"Aggregated CDI"},{"i":"comm-2216-br-badge-variant-success-text-2-9-cdi","l":"COMM 2216<br>:crescent_moon::crescent_moon::crescent_moon: | [!badge variant=\"success\" text=\"2.9\"] CDI","p":["...what?"]},{"i":"comp-2121-br-badge-variant-success-text-3-2-cdi","l":"COMP 2121<br>:crescent_moon::crescent_moon::crescent_moon: | [!badge variant=\"success\" text=\"3.2\"] CDI","p":["...what?"]},{"i":"comp-2510-br-badge-variant-success-text-3-0-cdi","l":"COMP 2510<br>:crescent_moon::crescent_moon::crescent_moon: | [!badge variant=\"success\" text=\"3.0\"] CDI","p":["...what?"]},{"i":"comp-2522-br-badge-variant-warning-text-4-0-cdi","l":"COMP 2522<br>:crescent_moon::crescent_moon::crescent_moon::crescent_moon: | [!badge variant=\"warning\" text=\"4.0\"] CDI","p":["...what?"]},{"i":"comp-2537-br-badge-variant-secondary-text-unknown","l":"COMP 2537<br>:icon-question: | [!badge variant=\"secondary\" text=\"UNKNOWN\"]","p":["...what?"]},{"i":"comp-2714-br-badge-variant-warning-text-3-7-cdi","l":"COMP 2714<br>:crescent_moon::crescent_moon::crescent_moon::crescent_moon: | [!badge variant=\"warning\" text=\"3.7\"] CDI","p":["...what?"]},{"i":"comp-2721-br-badge-variant-warning-text-3-8-cdi","l":"COMP 2721<br>:crescent_moon::crescent_moon::crescent_moon::crescent_moon: | [!badge variant=\"warning\" text=\"3.8\"] CDI","p":["...what?"]},{"i":"comp-2800-br-badge-variant-secondary-text-unknown","l":"COMP 2800<br>:icon-question: | [!badge variant=\"secondary\" text=\"UNKNOWN\"]","p":["...what?"]}],[{"l":"Business Communications 2","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!"]},{"i":"badge-variant-success-text-2-9-cdi","l":":crescent_moon::crescent_moon::crescent_moon: | [!badge variant=\"success\" text=\"2.9\"] CDI","p":["...what?"]},{"l":"Course Description"}],[{"l":"Discrete Mathematics","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!"]},{"i":"badge-variant-success-text-3-2-cdi","l":":crescent_moon::crescent_moon::crescent_moon: | [!badge variant=\"success\" text=\"3.2\"] CDI","p":["...what?"]},{"l":"Course Description"}],[{"l":"Procedural Programming","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!"]},{"i":"badge-variant-success-text-3-0-cdi","l":":crescent_moon::crescent_moon::crescent_moon: | [!badge variant=\"success\" text=\"3.0\"] CDI","p":["...what?"]},{"l":"Course Description"}],[{"l":"Object Oriented Programming 1","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!"]},{"i":"badge-variant-warning-text-4-0-cdi","l":":crescent_moon::crescent_moon::crescent_moon::crescent_moon: | [!badge variant=\"warning\" text=\"4.0\"] CDI","p":["...what?"]},{"l":"Course Description"}],[{"l":"Web Development 2","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!"]},{"i":"badge-variant-secondary-text-unknown","l":":icon-question: | [!badge variant=\"secondary\" text=\"UNKNOWN\"]","p":["...what?"]},{"l":"Course Description"}],[{"l":"Relational Database Systems","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!"]},{"i":"badge-variant-warning-text-3-7-cdi","l":":crescent_moon::crescent_moon::crescent_moon::crescent_moon: | [!badge variant=\"warning\" text=\"3.7\"] CDI","p":["...what?"]},{"l":"Course Description"}],[{"i":"computer-organizationarchitecture","l":"Computer Organization/Architecture","p":["More information is required for Downtown Campus. Please consider requesting a pull request to contribute!"]},{"i":"badge-variant-danger-text-4-2-cdi","l":":crescent_moon::crescent_moon::crescent_moon::crescent_moon::crescent_moon: | [!badge variant=\"danger\" text=\"4.2\"] CDI","p":["...what?"]},{"l":"Instructor Specifics","p":["Up to date as of Winter 2025.","Email: jason_wilder@bcit.ca Office Location: SW2-301 Course Outline: https://www.bcit.ca/outlines/20251072574/","Office Hours: By appointment (email jason_wilder@bcit.ca)","Criterion","Weight","Weekly quizzes in the labs","35%^1","Research presentations","15%","Midterm Exam","25%","Final Exam","^1 Quizzes can be retaken every other week up to a limit, with the most recent attempt determining the grade.","Email: ayesha_anzer@bcit.ca Office Location: Course Outline:","Office Hours:"]},{"l":"Course Description","p":["Computer organization is a fundamental topic for computer science students and for any future programmers. The course gives a good understanding of the computer hardware and how software is built on a specific hardware. The computer is regarded as a hierarchy of levels, each one performing some well-defined functions from the device level (hardware) to the problem-oriented language level. Each level is discussed and analyzed in detail.","Computer Organization/Architecture is an intensive introduction course that covers the foundations of hardware, networking, circuitry, and low level programming with Assembly.","Succeeding in this course requires you to memorize and understand diagrams, in addition to the underlying purpose of all the components covered."]}],[{"i":"#","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!"]},{"i":"chapter-2-data-paths-and-pipelining","l":"Chapter 2: Data Paths and Pipelining"},{"l":"Terminology","p":["(Officially, the MIPS processor stands for Microprocessor without Interlocked Pipeline Stages)","ALU- Arithmetic Logic Unit","Bandwidth- the rate at which instructions are finished","Clock Cycle- The interval between the rising edges of the clock","Clock- Something that can be turned on and off","Frequency- the amount of clock cycles per second, measured in Hertz","Instruction Register- special register in the CPU that stores an instruction to be decoded and executed","Latency- the total time it takes for a single instruction to finish","MIPS- M illions of I nstructions P er S econd","Parallelism- Being able to work on several instructions in the same stage at the same time","Period- the time taken per clock cycle","Pipelining- The process of splitting the FDE process into separate stages, allowing for multiple instructions to be worked on at once","Principle of Spatial Locality- Words with numerically similar addresses (ex: 6000, 6001) tend to be stored physically close to each other","Principle of Temporal Locality- Words requested by the CPU are likely to be requested again in the near future","Program Counter- Special register in the CPU that stores the address of the next instruction to be fetched","Represents how fast a processor can begin instructions","RISC- Reduced Instruction Set Computer CISC- Complex Instruction Set Computer","UNRELATED TO LATENCY!"]},{"l":"Clock Speed and Frequency","p":["A 1 GHz CPU has 1 billion rising/falling edges per second 1 rising edge per 1/1 billion seconds = 1 nanosecond","A clock cycle is the interval between the rising edges of the clock (on, off, on again).","A clock is anything that can be turned on and off.","A diagram of a clock.","Analogy: Imagine a bus. People at a bus stop can only board that bus every time a bus arrives at that stop.","But that's not the main concern when we want to make an efficient CPU. What doesn’t matter today is how long an instruction takes (the latency), or how often you can start them (the clock speed). What matters is the speed at which an instruction is finished (the bandwidth).","Clocks are involved in almost every component of a computer. Every clock cycle, that component can execute one action (ex: transfer data from RAM to CPU, decode instruction). The CPU can start an instruction each clock cycle.","Ex:","Frequency = 100MHz Period = 1/100M = 0.00000001 s = 10 nanoseconds","In computers, this is usually an electronic component that turns \"on\" when receiving","Inverse of frequency\\","Measured in Hertz (Ex: 100MHz)","Measured in time units","One clock cycle is rising edge to rising edge","Parallelism ties in with this later!","The \"on/off\" cycle tends to be a regular cycle in computers, called the clock cycle.","The clock cycle's usually quite fast in computers - 100 million cycles per second","The frequency of a clock (or the clock speed) is how many clock cycles happen per second","The period of a clock is how much time passes between clock cycles","This doesn’t mean we can finish an instruction each clock cycle - usually, finishing an instruction takes much longer than a single clock cycle."]},{"l":"The Von Neumann Datapath","p":["The Von Neumann data path. Taken from Andrew S. Tanenbaum - Structured Computer Organization.","The lines are buses(electrical lines)","The boxes are registers(CPU memory - can store one word)","The big box has a lot of registers","Some registers have names and specific functions","A computer has only a few dozen registers. You don’t need that many for a good CPU, though; the registers just need to be constantly running."]},{"l":"Special Registers","p":["There are two special registers in the CPU;","the program counter(PC), which stores the main memory address of the next instruction to be fetched, and","the instruction register(IR), which stores an instruction to be decoded and executed."]},{"l":"The Datapath Process","p":["There are five steps to the Von Neumann data path:","The CPU fetches the address (outside of the CPU) from the Program Counter, and gets it transferred from memory using buses Program Counter is updated with the next instruction’s address","The CPU decodes the instruction","The CPU grabs operands from the its registers and then transfers them to the input registers of the ALU","The ALU executes the instruction by taking in the input registers' values, modifying them accordingly, and sendind the output to the output register","The final value either gets sent into a register for use in the near future, or sent into RAM to be stored for later use","Eventually, everything goes back to the hard drive","The fetch-decode-execute cycle.","You should note that the slowest part of the FDE cycle is the fetching part, or getting instructions and data from memory. To speed that process up, you just need to prefetch those instructions.","Programs run fast when:","They’re constantly being provided data (so their registers are full)","They can predict what that data is (so that they don't always have to keep going to main memory)","Cache is related to this!","You may also notice that each step is executed by a separate unit. This ties into pipelining later, but hold on for a second."]},{"i":"the-instruction-execution-wishlist","l":"The Instruction Execution \"Wishlist\"","p":["There are many parts of the FDE cycle computer architects wish they could optimize. There are also reasons why they can't.","Wish","Flaws","All instructions are directly executed by hardware, as hardware runs significantly faster than software (remember the multilevel computer diagram?)","Complex and expensive, plus some instructions are too complicated and should be executed by hardware (ex: connecting to MySQL)","Instructions are issued as fast/often as possible","Complex and expensive, plus has physical limits on the hardware (wires can only get so close to each other before they start affecting each other)","Instructions are easy to decode, preferably by making them all the same size","Long instructions can't be compressed into the same data size as short instructions, plus this idea goes against backwards compatibility (ex: decoding instructions from the 80's)","Only LOAD and STORE instructions reference main memory","Referencing main memory is inevitable (ex: adding two values from main memory)","The CPU's immediate memory stash is expanded by adding more registers","Expensive, power consumptive, and impractical (stored instructions might become outdated by the time they're referenced)"]},{"l":"Cache","p":["Jason uses a stomach-fridge-store analogy for cache. I'm going to steal it.","Imagine the CPU's registers are its stomach. Also imagine that the main memory of the computer is a Costco. The Costco is pretty far from the CPU's house, and so it wants to minimize the time it takes to get groceries from there to its stomach. Luckily for it, there's a third party it isn't aware of called the cache!","Whenever the CPU sends an instruction to fetch a word from main memory, the cache intercepts that instruction and sees if it already has the data the CPU wants. If it does, then it sends that word to the CPU instead of taking the long trip to main memory Costco. If not, then it goes to main memory itself, fetches a whole block of instructions near the word the CPU wants, then stores it in a fridge for the CPU. Then, it sends back the word the CPU requested.","The reason the cache stores a block of words is that it takes advantage of two principles of locality; the principle of spatial locality and the principle of temporal locality."]},{"l":"Principle of Spatial Locality"},{"l":"Principle of Temporal Locality"},{"l":"Interpreters"},{"l":"Pipelining"},{"l":"Latency"},{"l":"Bandwidth"}],[{"i":"chapter-1-introduction","l":"Chapter 1: Introduction"},{"l":"Terminology","p":["Bit- a binary digit","Byte- a group of 8 bits","Word- an fixed-size group of data","Used to be 32 bits, is now 64 bits","Dependent on the register size","Bus- an electrical line that transfers data between two devices Register- a component that stores data in the CPU","Higher Level Language- Language that's relatively higher in the computer architecture Lower Level Language- Language that's relatively lower in the computer architecture","CPU- Central Processing Unit","Invented by von Neumann","Continuously does the “fetch-decode-execute” cycle","FDE- Fetch, Decode, Execute","The instructions are “fetched” from RAM","They're then decoded so the CPU knows what to do","They're then executed","RAM(aka main memory) - the memory of the computer"]},{"l":"Logarithms and Powers of 2","p":["-10","-12","-15","-18","-20","-21","-24","-3","-30","-40","-50","-6","-60","-70","-80","-9","10","10 n","12","15","18","2 n","20","21","24","3","30","40","50","6","60","70","80","9","a","atto","E","exa","f","femto","G","giga","k","kilo","m","mega","micro","milli","n","nano","p","peta","pico","Prefix","Signifier","T","tera","We probably won't see too much of anything above tera- or below pico-, but it's good knowledge to know anyways.","Y","yocto","yotta","Z","zepto","zetta","μ"]},{"l":"Computer Architecture Layers","p":["5 - Problem-Oriented Language Level↓ Translation (compilation) to assembly 4 - Assembly Language Level↓ Translation (assembly) 3 - Operating System Language Level↓ Interpretation (OS) 2 - Instruction Set Language Level↓ Interpretation (microprograms) or direct execution 1 - Microarchitecture Level↓ Hardware 0 - Digital Logic Level","image"]},{"l":"Translation and Interpretation","p":["In order to convert between different language levels, we need to first convert the instructions between different layers.","This process can usually only go down the layers, not up","Translation is the process of converting a program from one HLL to its equivalent program in an LLL","Converting an HLL program is done all at once","After doing so, the HLL program isn't needed anymore","Interpretation is the process of converting an instruction from one HLL to its equivalent set of instructions in an LLL","Converting an HLL program is done one instruction at a time"]},{"l":"Notes","p":["The Digital Logic Level is the only hardware level","All other levels are software","Compilation can only go down to assembly level","Multi-layered computers are a modular system","If you want to replace a level, you just need to also replace the conversions between its higher and lower levels","When compiling and running a program, we end up with six different versions of the same program, each in a different language"]},{"l":"Patterns From Highest to Lowest Level","p":["Easiest to hardest to understand (for humans)","Hardest to easiest to understand (for computers)","Most to least powerful instructions","Flexible to rigid","Easiest to hardest to execute a high-level instruction","Least to most amount of instructions","Smallest to largest files to execute","Slowest to fastest levels","Most to least conversions to get to the lowest level"]},{"l":"Week 1 Question"},{"i":"q4","l":"Q4.","p":["\\frac{n}{m} * \\frac{n}{m} * k(\\frac{n}{m})^2 * k","\\frac{n}{m} * k","\\frac{n}{m} * n * k","\\frac{n}{m}^{r - 1} * k","1 level- r instruction can do the work of m level-( r - 1) instructions","1 level- r instruction gets converted into n level-( r - 1) instructions after interpretation","A level-1 program takes k seconds to run.","A level-2 instruction first has to be converted into level-1 instructions before being executed.","A level-2 program takes \\frac{n}{m} * k seconds to run.","A level-3 instruction first has to be converted into n level-2 instructions before being executed.","Consider a multilevel computer in which all the levels are different. Each level has instructions that are m times as powerful as those of the level below it; that is, one level r instruction can do the work of m level r − 1 instructions. If a level-1 program requires k seconds to run, how long would equivalent programs take at levels 2, 3, and 4, assuming n level r instructions are required to interpret a single r + 1 instruction?","Given four variables, r, m, n, k:","k","n * k","Notice that, for a level-3 program, the degree of \\frac{n}{m} is equal to 2. For a level-2 program, the degree of \\frac{n}{m} is equal to 1. We can generalize this to say that for a level- r program, the degree of \\frac{n}{m} is equal to r - 1.","Now, let's calculate how long a level-2 program takes.","One level-2 instruction gets converted into n level-1 instructions.","One level-2 program will take (\\frac{n}{m})^2 * k seconds to run.","One level-2 program will take \\frac{n}{m} * k seconds to run.","r= an arbitrary level in the computer k= the amount of seconds for a level-1 program to run m= the power factor of a level's instructions n= the amount of level r - 1 instructions required to interpret a level- r instruction","The execution of these instructions then gets sped up by our power factor, m.","The first step is to define all the variables in the question. From there, we can figure out how to solve it.","This is how we get the formula!","We can use the same logic to calculate how long a level-3 program takes."]}],[{"l":"Projects 2","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!"]},{"i":"badge-variant-secondary-text-unknown","l":":icon-question: | [!badge variant=\"secondary\" text=\"UNKNOWN\"]","p":["...what?"]},{"l":"Course Description"}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"l":"Placeholder","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"i":"term-5-to-8-acs-bsc","l":"Term 5 to 8: ACS (BSc)","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}],[{"i":"term-m1-to-m4-ac-msc","l":"Term M1 to M4: AC (MSc)","p":["WIP This page is a work in progress. Feel free to help contribute by creating a pull request!","Reprehenderit amet duis culpa ut. Occaecat irure ea sint id adipisicing reprehenderit et est enim sunt. Anim ullamco ex aliqua aute esse magna. Esse ipsum irure minim culpa enim ex occaecat voluptate Lorem tempor deserunt veniam ea eu. Voluptate commodo adipisicing nisi consectetur cupidatat est. Anim commodo consequat veniam laboris irure adipisicing cillum ullamco reprehenderit irure dolor nulla."]}]]